citation(ggpubr)
library(ggpubr)
library(ggpubr)
citation(ggpubr)
citation("ggpubr")
setwd("C:/Users/astra/OneDrive - University of Canterbury/Git/ADPE_Remote_Sensing/Data")
masterdata <- read.csv("ADPE_masterdata.csv")
Dataset.5.0 <- masterdata
# Add colour to sites
colours<-c(BIRD="blue",CROZ="red",INEX="orange",ROYD="green")
Dataset.5.0$logGuano_area <- log(Dataset.5.0$Guano_area)
Dataset.5.0$logBP <- log(Dataset.5.0$BP)
# Extracting only needed variables
Dataset.5.1 <- Dataset.5.0[,c("logBP", "logGuano_area", "Site_ID", "Colony")]
# Remove NAs
Dataset.5.2 <- na.omit(Dataset.5.1)
View(Dataset.5.2)
New.model <- lm(Dataset.5.2$logGuano_area ~ Dataset.5.2$logBP)
summary(New.model)
AIC(New.model)
library(MuMIn) # for AICc scores
BP.AICc <- AICc(New.model)
library(lme4)
# LMM with site effect using REML
lmm1 <- lme4::lmer(logGuano_area ~ logBP + (1|Site_ID), data = Dataset.5.2)
anova(lmm1) # just looks at fixed effects
summary(lmm1) # variances came from here
# Compare LMM to LM using ML method
lmm2 <- lme4::lmer(logGuano_area ~ logBP + (1|Site_ID), REML = FALSE, data = Dataset.5.2)
anova(lmm2) # just looks at fixed effects
summary(lmm2)
AIC(New.model, lmm2)
AICc(New.model, lmm2)
BP.AICc <- AICc(New.model) # parsimonious model
lmm2.AICc <- AICc(lmm2) # model with site effect
# Convert degrees to radians
Dataset.5.0$AspectRadians <- pi*Dataset.5.0$Aspect/180
# Calculate northness
Dataset.5.0$Northness <- cos(Dataset.5.0$AspectRadians)
# Extracting extra needed variables
Dataset.5.3 <- Dataset.5.0[,c("logBP", "logGuano_area", "Site_ID", "PAR", "Slope", "Northness")]
# Remove NAs
Dataset.5.4 <- na.omit(Dataset.5.3)
View(Dataset.5.4)
library(corrplot)
covariates <- data.frame(Dataset.5.4$logBP, Dataset.5.4$Slope, Dataset.5.4$Northness, Dataset.5.4$PAR)
cor.matrix <- cor(covariates) # default method is pearsons
corrplot(cor.matrix, method = "number", type = "lower", tl.cex = 1)
library(car) # for VIF values
# Removed from further analysis - Candidate model with northness (correlated with BP)
lm.GA.a1 <- lm(Dataset.5.4$logGuano_area ~ Dataset.5.4$logBP + Dataset.5.4$Northness)
summary(lm.GA.a1)
vif(lm.GA.a1) # well above 2.0
# removed BP
lm.GA.a2 <- lm(Dataset.5.4$logGuano_area ~ Dataset.5.4$Northness)
summary(lm.GA.a2) # northness does have an influence - not as good as BP
# Candidate model with slope
lm.GA.b <- lm(Dataset.5.4$logGuano_area ~ Dataset.5.4$logBP + Dataset.5.4$Slope)
summary(lm.GA.b)
anova(lm.GA.b)
vif(lm.GA.b) # both under 2.0
# Candidate model with PAR (PAR and BP slightly correlated)
lm.GA.d <- lm(Dataset.5.4$logGuano_area ~ Dataset.5.4$logBP + Dataset.5.4$PAR)
summary(lm.GA.d)
anova(lm.GA.d)
vif(lm.GA.d) # both under 2.0 (Don't need to remove PAR)
# Candidate model with PAR and slope
lm.GA.e <- lm(Dataset.5.4$logGuano_area ~ Dataset.5.4$logBP + Dataset.5.4$PAR + Dataset.5.4$Slope)
summary(lm.GA.e)
# Intercept only model
null.model <- lm(Dataset.5.4$logGuano_area ~ 1)
BP.AICc <- AICc(New.model) # BP only model
Slope.AICc <- AICc(lm.GA.b) # slope model
PAR.AICc <- AICc(lm.GA.d) # PAR model
Slope.PAR.AICc <- AICc(lm.GA.e) # slope and PAR model
null.AICc <- AICc(null.model) # intercept only model
BP.AICc-null.AICc
BP.AICc-Slope.AICc
BP.AICc-PAR.AICc
BP.AICc-Slope.PAR.AICc
# calculate delta AICc scores and weights
library(qpcR) # package masks MuMin so run after
# for candidate models
x <- c(BP.AICc, Slope.AICc, PAR.AICc, Slope.PAR.AICc, null.AICc)
akaike.weights(x)
# for site effect
x <- c(BP.AICc, lmm2.AICc)
akaike.weights(x)
# ACF on residuals of LM
temporal.residuals <- resid(New.model, type="pearson") # use type = pearson for normalised residuals
par(mfrow = c(1,1))
acf(temporal.residuals) # no temporal autocorrelation
# set up arrays
Dif.array <- array(NA, dim = c(27,2))
# Loop
datSeq <-  1:dim(Dataset.5.2)[1] # to partition the data by every point
# for every point (i) in Dataset.5.2 1-27 ...
for(i in 1:dim(Dataset.5.2)[1]){
mask =  datSeq != i # Leave out one point
test.dat <- Dataset.5.2[i,] # Testing data is the one point
train.dat <- Dataset.5.2[mask,] # Training data is the remaining data other than that one point
New.model <- lm(logGuano_area ~ logBP, data = train.dat) # run model
test.predict <- predict(New.model, newdata = test.dat) # use model to predict guano area for testing data
print(test.predict)
train.mean <- mean(train.dat$logGuano_area) # calculate mean guano area of the training data
num.dif <- test.predict-test.dat$logGuano_area # predicted guano area - observed guano area
dom.dif <- train.mean-test.dat$logGuano_area # mean guano area of the training data - observed guano area
Dif.array[i,1] <- num.dif
Dif.array[i,2] <- dom.dif
## calculate the r squared
r2 = 1 - sum(num.dif^2)/sum(dom.dif^2)
print(dim(test.dat))
print(dim(train.dat))
print(r2 )
}
# calculate numerator and denominator difference
r2Total <- 1 - (sum(Dif.array[,1]^2) / sum(Dif.array[,2]^2))
# R squared predicted value
print(r2Total)
# For LM
coeff = coefficients(New.model)
sig = summary(New.model)$sigma
par(mfrow=c(2,2))
ADPE_Data <- Dataset.5.2
sites <- c("BIRD", "CROZ", "INEX", "ROYD")
propReduce = seq(0.05, 0.6, 0.01)
for(i in 1:4)
{
site_i = sites[i]
startPop = exp(mean(ADPE_Data$logBP[ADPE_Data$Site_ID == site_i]))
logPopStart = log(startPop)
logPopReduce = log(startPop * (1 - propReduce))
logGAStart = coeff[1] + coeff[2] * logPopStart
logGAReduce = coeff[1] + coeff[2] * logPopReduce
zScore = (logGAStart - logGAReduce) / sqrt(sig^2 + sig^2)
pTrueReduce = pnorm(zScore) # The normal cumulative distribution function
## proportion change to be 95% confident the reduction is real
maskPositive = pTrueReduce >= 0.95
diff = pTrueReduce - 0.95
minPos = min(diff[maskPositive])
indx = diff %in% minPos
print(paste(site_i, " 95% confident this proportion change is real: ",
propReduce[indx]))
# print(pTrueReduce) - give same numbers for each site
# print(propReduce) - give same numbers for each site
plot(propReduce, pTrueReduce, type="l", xlab="Prop. pop. reduced",
ylab= "Prob. true reduction", main= site_i)
abline(h = 0.95, col = "blue", lty = 2) # add a blue dashed line at y = 0.95
abline(h = 0.80, col = "black", lty = 2) # add a black dashed line at y = 0.80
abline(h = 0.60, col = "red", lty = 2) # add a black dashed line at y = 0.60
}
par(mfrow=c(1,1))
plot(propReduce, pTrueReduce, type="l", xlab="Proportion of population reduced",
ylab= "Probability of detecting a true reduction")
abline(h = 0.95, col = "blue", lty = 2) # add a blue dashed line at y = 0.95
abline(h = 0.80, col = "black", lty = 2) # add a black dashed line at y = 0.80
abline(h = 0.60, col = "red", lty = 2) # add a black dashed line at y = 0.60
sessionInfo() # for citing package versions
library(DHARMa)
Guanoarea <- read.csv("ADPE_guano_area_trends.csv")
# Add colour to sites
colours<-c("blue","red","green","orange")
library(ggplot2)
Four_trends_plot <- ggplot(Guanoarea, aes(x = Season, y = Guano_area, col = Colony)) +
geom_point() +
geom_line() +
facet_wrap(~factor(Colony, levels = c('Cape Crozier', 'Cape Bird', 'Cape Royds', 'Inexpressible Island')),
scales ="free_y") +
xlab("Season") +
ylab("Guano area (m2)") +
theme_minimal() +
theme(legend.position ="none") +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
scale_colour_manual(values=colours) +
scale_x_continuous(breaks=seq(2009,2021,by=2))
Four_trends_plot # Plot not presented in manuscript
Guanoarea$logGuano_area <- log(Guanoarea$Guano_area)
All_trends_plot <- ggplot(Guanoarea, aes(x = Season, y = logGuano_area, group=Colony)) +
geom_point(aes(colour = Colony)) +
geom_line(aes(colour = Colony)) +
xlab("Season") +
ylab("Log Guano area (m2)") +
theme_minimal() +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
scale_color_manual(values = colours) +
scale_x_continuous(breaks=seq(2009,2021,by=2))
All_trends_plot # Plot not presented in manuscript
CROZdf <- subset(Guanoarea, Guanoarea$Colony_code=="CROZ")
BIRDdf <- subset(Guanoarea, Guanoarea$Colony_code=="BIRD")
ROYDdf <- subset(Guanoarea, Guanoarea$Colony_code=="ROYD")
INEXdf <- subset(Guanoarea, Guanoarea$Colony_code=="INEX")
# Crozier
Crozier_trend_plot <- ggplot(CROZdf, aes(x = Season, y = Guano_area)) +
geom_point(colour = "#Ff0000") +
geom_line(colour = "#Ff0000") +
xlab(element_blank()) +
ylab(element_blank()) +
theme_minimal() +
theme(legend.position = c(1,1)) +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
scale_x_continuous(limits=c(2009,2021), breaks = seq(2009,2021, by=2)) +
scale_y_continuous(limits = c(330000,540000), breaks = seq(350000,540000, by=50000))
Crozier_trend_plot
# Bird
Bird_trend_plot <- ggplot(BIRDdf, aes(x = Season, y = Guano_area)) +
geom_point(colour= "#0000FF") +
geom_line(colour= "#0000FF") +
xlab(element_blank()) +
ylab(element_blank()) +
theme_minimal() +
theme(legend.position = c(1,1)) +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
scale_x_continuous(limits = c(2009,2021), breaks = seq(2009,2021, by=2)) +
scale_y_continuous(limits = c(115000,159900), breaks = seq(120000,159000, by=10000))
Bird_trend_plot
# Royds
Royds_trend_plot <- ggplot(ROYDdf, aes(x = Season, y = Guano_area)) +
geom_point(colour = "#00ff00") +
geom_line(colour = "#00ff00") +
xlab(element_blank()) +
ylab(element_blank()) +
theme_minimal() +
theme(legend.position = c(1,1)) +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
scale_x_continuous(limits = c(2009,2021), breaks = seq(2009,2021, by=2)) +
scale_y_continuous(limits = c(4000,14900), breaks = seq(5000,14900, by=2500))
Royds_trend_plot
# Inexpressible
Inexpressible_trend_plot <- ggplot(INEXdf, aes(x = Season, y = Guano_area)) +
geom_point(colour = "#FFA500") +
xlab(element_blank()) +
ylab(element_blank()) +
theme_minimal() +
theme(legend.position = c(1,1)) +
theme(axis.line = element_line(color='black'),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()) +
scale_x_continuous(limits = c(2009,2021), breaks = seq(2009,2021, by=2)) +
scale_y_continuous(limits = c(65000,84900), breaks = seq(65000,84900, by=5000))
Inexpressible_trend_plot
library(ggpubr)
Together <- plot(ggarrange(Crozier_trend_plot,
Bird_trend_plot,
Royds_trend_plot,
Inexpressible_trend_plot,
ncol = 2, nrow = 2, labels=c("a","b","c","d")))
annotate_figure(Together, left = "Guano area (m2)", bottom = "Season")
# Figure 3
# Figure 3
# Figure 3
